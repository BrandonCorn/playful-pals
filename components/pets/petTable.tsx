/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/0lJWSxv5FDr
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

import {
  TableHead,
  TableRow,
  TableHeader,
  TableCell,
  TableBody,
  Table
} from '@/components/ui/table';
import { Button } from '../ui/button';
import { AvatarImage, AvatarFallback, Avatar } from '@/components/ui/avatar';
import { Pets } from '@/lib/schema';
import { getAllPets } from 'actions/pet';
import PetDetails from './petDetails';
import { PencilIcon } from '../icons';

export default async function PetsTable() {
  // @ts-ignore
  const pets: Pets[] | { error: any } = await getAllPets();

  return (
    <div className="flex flex-col h-full">
      <main className="flex-1 p-6">
        <div className="flex justify-between items-center mb-6"></div>
        <div className="border rounded-lg overflow-hidden">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Pet</TableHead>
                <TableHead> Breed </TableHead>
                <TableHead>Color</TableHead>
                <TableHead>Age</TableHead>
                <TableHead>Weight</TableHead>
                <TableHead />
              </TableRow>
            </TableHeader>
            <TableBody>
              {Array.isArray(pets) &&
                pets.map((pet, i) => {
                  return (
                    <TableRow key={`pet-details-${i}`}>
                      <TableCell className="flex items-center gap-4">
                        {' '}
                        <Avatar>
                          <AvatarImage alt="Pet" src="/placeholder-pet.jpg" />
                          <AvatarFallback>
                            {pet.name.charAt(0).toUpperCase()}
                          </AvatarFallback>
                        </Avatar>
                        {pet.name}
                      </TableCell>
                      <TableCell>{pet.breed}</TableCell>
                      <TableCell>{pet.color}</TableCell>
                      <TableCell>{pet.age}</TableCell>
                      <TableCell>{pet.weight}</TableCell>
                      <TableCell>
                        <PetDetails pet={pet}>
                          <Button size="icon" variant="outline">
                            <PencilIcon className="h-4 w-4" />
                            <span className="sr-only">Edit pet</span>
                          </Button>
                        </PetDetails>
                      </TableCell>
                    </TableRow>
                  );
                })}
            </TableBody>
          </Table>
        </div>
      </main>
    </div>
  );
}
